<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mental Math Practice</title>
    <style>
        body {
            font-family: "Times New Roman", Times, serif;
            background-color: #f0f8ff;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .container {
            text-align: center;
            background: #ffffff;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            max-width: 600px;
            position: relative;
            overflow: hidden;
        }

        h1 {
            color: #4a90e2;
            font-size: 2.5em;
            margin-bottom: 20px;
        }

        button {
            padding: 12px 25px;
            font-size: 18px;
            border: none;
            border-radius: 8px;
            background-color: #4a90e2;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #357abd;
        }

        #game-area.hidden {
            display: none;
        }

        #question-area {
            margin: 20px 0;
        }

        #timer-container {
            margin: 20px 0;
            height: 35px;
            background-color: #e0e0e0;
            border-radius: 10px;
            overflow: hidden;
            position: relative;
            box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        }

        #timer-bar {
            height: 100%;
            background-color: #ff69b4;
            width: 100%;
            transition: width 1s linear;
        }

        input[type="text"] {
            padding: 12px;
            font-size: 18px;
            width: 80%;
            border-radius: 8px;
            border: 1px solid #ddd;
            box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        }

        .message {
            margin-top: 10px;
            font-size: 20px;
            color: #4a90e2;
        }

        #fireworks-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: none;
            justify-content: center;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.6);
        }

        .firework {
            width: 60px;
            height: 60px;
            background: url('https://www.pngall.com/wp-content/uploads/5/Fireworks-PNG-File.png') no-repeat center center;
            background-size: contain;
            animation: explode 1s ease-out infinite;
        }

        @keyframes explode {
            0% { transform: scale(0); opacity: 1; }
            50% { transform: scale(1); opacity: 0.5; }
            100% { transform: scale(0); opacity: 0; }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Mental Math Practice</h1>
        <button onclick="startGame()">Start Practice</button>
        <div id="game-area" class="hidden">
            <div id="question-area">
                <p id="question"></p>
                <input type="text" id="answer" placeholder="Your answer" onkeydown="checkEnter(event)">
                <button onclick="submitAnswer()">Submit</button>
            </div>
            <div id="timer-container">
                <div id="timer-bar"></div>
            </div>
            <div class="message" id="message"></div>
        </div>
        <div id="fireworks-container">
            <div class="firework"></div>
            <div class="firework"></div>
            <div class="firework"></div>
            <p style="color: white; font-size: 24px;">WOO 10 in a row! You got this baby!</p>
        </div>
    </div>
    <script>
        let currentQuestion;
        let timeLeft = 30; // 30 seconds for each question
        let timerInterval;
        let correctAnswersInRow = 0;

        function startGame() {
            document.querySelector('.container > button').classList.add('hidden');
            document.getElementById('game-area').classList.remove('hidden');
            generateQuestion();
            startTimer();
        }

        function generateQuestion() {
            const operation = Math.floor(Math.random() * 4);
            let num1, num2, question, answer;

            switch (operation) {
                case 0: // Addition
                    num1 = Math.floor(Math.random() * 991) + 9; // 9 to 999
                    num2 = Math.floor(Math.random() * 99) + 1;  // 1 to 99
                    question = `${num1} + ${num2}`;
                    answer = num1 + num2;
                    break;
                case 1: // Subtraction
                    num1 = Math.floor(Math.random() * 991) + 9; // 9 to 999
                    num2 = Math.floor(Math.random() * 99) + 1;  // 1 to 99
                    question = `${num1} - ${num2}`;
                    answer = num1 - num2;
                    break;
                case 2: // Division
                    num2 = Math.floor(Math.random() * 10) + 1; // 1 to 10
                    num1 = Math.floor(Math.random() * 98) + 2; // 2 to 99
                    // Ensure that num1 is divisible by num2
                    const product = num1 * num2;
                    question = `${product} รท ${num1}`;
                    answer = num2;
                    break;
                case 3: // Multiplication
                    num1 = Math.floor(Math.random() * 98) + 2; // 2 to 99
                    num2 = Math.floor(Math.random() * 11); // 0 to 10
                    if (num1 * num2 > 99) { num1 = Math.floor(Math.random() * 98) + 2; } // Ensure result is not a triple-digit number
                    question = `${num1} * ${num2}`;
                    answer = num1 * num2;
                    break;
            }
            currentQuestion = { question, answer };
            document.getElementById('question').innerText = currentQuestion.question;
            document.getElementById('answer').value = '';
            document.getElementById('answer').focus();
            document.getElementById('message').innerText = '';
            resetTimer(); // Reset the timer for the new question
        }

        function submitAnswer() {
            const answer = parseInt(document.getElementById('answer').value, 10);
            if (answer === currentQuestion.answer) {
                correctAnswersInRow++;
                if (correctAnswersInRow === 10) {
                    showFireworks();
                    correctAnswersInRow = 0; // Reset the counter
                }
                document.getElementById('message').innerText = 'YES GOODJOB CUTIE!';
                setTimeout(() => {
                    generateQuestion(); // Generate new question
                }, 1000); // Wait 1 second before generating a new question
            } else {
                correctAnswersInRow = 0; // Reset the counter if wrong answer
                document.getElementById('message').innerText = 'Its okay, you got this sweetheart';
            }
        }

        function startTimer() {
            timeLeft = 30;
            const timerBar = document.getElementById('timer-bar');
            timerBar.style.width = '100%';
            clearInterval(timerInterval);
            timerInterval = setInterval(() => {
                timeLeft--;
                timerBar.style.width = `${(timeLeft / 30) * 100}%`;
                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    document.getElementById('message').innerText = 'Time is up! Try the next question.';
                    correctAnswersInRow = 0; // Reset the counter if time is up
                    generateQuestion(); // Generate new question when time is up
                }
            }, 1000);
        }

        function resetTimer() {
            clearInterval(timerInterval);
            startTimer();
        }

        function showFireworks() {
            document.getElementById('fireworks-container').style.display = 'flex';
            setTimeout(() => {
                document.getElementById('fireworks-container').style.display = 'none';
            }, 3000);
        }

        function checkEnter(event) {
            if (event.key === 'Enter') {
                submitAnswer();
            }
        }
    </script>
</body>
</html>
